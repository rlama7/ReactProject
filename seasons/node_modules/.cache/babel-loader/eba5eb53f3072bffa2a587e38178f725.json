{"ast":null,"code":"var _jsxFileName = \"/Users/rlama/Documents/ReactPro/ReactProject/seasons/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component {\n  // constructor() --> javascript requirement for classess\n  constructor(props) {\n    super(props); // initialize state\n\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    }; // direct assignment only once \n  } // end constructor()\n  // best for data loading, API requests\n\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition( // callback \n    position => {\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, err => {\n      this.setState({\n        errorMessage: err.message\n      });\n    });\n  } // end comopnentDidMount()\n\n\n  componentDidUpdate() {\n    console.log('My component was updated');\n  } // render() --> react requirement for class based component\n\n\n  render() {\n    // conditional rendering\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Error: \", this.state.errormessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Latitude: \", this.state.lat);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Loading...\");\n  } // end render() \n\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/Users/rlama/Documents/ReactPro/ReactProject/seasons/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","componentDidUpdate","console","log","render","errormessage","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChC;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAAb,CAJiB,CAI2B;AAE7C,GAR+B,CAQ9B;AAEF;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,EAEE;AACAC,IAAAA,QAAQ,IAAI;AACV,WAAKC,QAAL,CAAc;AAACR,QAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,OAAd;AACD,KALH,EAMEC,GAAG,IAAI;AACL,WAAKH,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAEU,GAAG,CAACC;AAAnB,OAAd;AACD,KARH;AAUD,GAtB+B,CAsB9B;;;AAEFC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,GA1B+B,CA4BhC;;;AACAC,EAAAA,MAAM,GAAG;AACP;AACA,QAAI,KAAKjB,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWkB,YAAxB,CAAP;AACD;;AACD,QAAI,CAAC,KAAKlB,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgB,KAAKD,KAAL,CAAWC,GAA3B,CAAP;AACD;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAtC+B,CAsC9B;;;AAtC8B;;AAyClCN,QAAQ,CAACsB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBE,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component {\n  // constructor() --> javascript requirement for classess\n  constructor(props) {\n    super(props);\n\n    // initialize state\n    this.state = {lat: null, errorMessage: ''}; // direct assignment only once \n\n  } // end constructor()\n\n  // best for data loading, API requests\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      \n      // callback \n      position => {\n        this.setState({lat: position.coords.latitude});\n      },\n      err => {\n        this.setState({errorMessage: err.message});\n      }\n    );\n  } // end comopnentDidMount()\n\n  componentDidUpdate() {\n    console.log('My component was updated')\n  }\n\n  // render() --> react requirement for class based component\n  render() {\n    // conditional rendering\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errormessage}</div>;\n    }\n    if (!this.state.errorMessage && this.state.lat) {\n      return <div>Latitude: {this.state.lat}</div>;\n    }\n    return <div>Loading...</div>\n  } // end render() \n}\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));"]},"metadata":{},"sourceType":"module"}