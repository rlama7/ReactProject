{"ast":null,"code":"import { apiCall } from './api/api';\nimport { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from \"./constants.js\";\nexport const setSearchField = text => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n});\nexport const requestRobots = () => dispatch => {\n  dispatch({\n    type: REQUEST_ROBOTS_PENDING\n  });\n  apiCall('https://jsonplaceholder.typicode.com/users').then(data => dispatch({\n    type: REQUEST_ROBOTS_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: REQUEST_ROBOTS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/rlama/Documents/ReactPro/ReactProject/RoboFriends/src/actions.js"],"names":["apiCall","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchField","text","type","payload","requestRobots","dispatch","then","data","catch","error"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,WAAtB;AACA,SACEC,mBADF,EAEEC,sBAFF,EAGEC,sBAHF,EAIEC,qBAJF,QAKO,gBALP;AAOA,OAAO,MAAMC,cAAc,GAAIC,IAAD,KAAW;AACvCC,EAAAA,IAAI,EAAEN,mBADiC;AAEvCO,EAAAA,OAAO,EAAEF;AAF8B,CAAX,CAAvB;AAKP,OAAO,MAAMG,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/CA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACAF,EAAAA,OAAO,CAAC,4CAAD,CAAP,CACGW,IADH,CACQC,IAAI,IAAIF,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,sBAAR;AAAgCK,IAAAA,OAAO,EAAEI;AAAzC,GAAD,CADxB,EAEGC,KAFH,CAESC,KAAK,IAAIJ,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEH,qBAAR;AAA+BI,IAAAA,OAAO,EAAEM;AAAxC,GAAD,CAF1B;AAGD,CALM","sourcesContent":["import {apiCall} from './api/api'\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from \"./constants.js\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n})\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  apiCall('https://jsonplaceholder.typicode.com/users')\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\n};\n"]},"metadata":{},"sourceType":"module"}